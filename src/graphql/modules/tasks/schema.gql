type Task {
  id: ID!
  title: String!
  workspaceId: ID!
  link: String
  file: String
  description: String!
  filename: String
  mimetype: String
  encoding: String
  progress: String
  maxDate: String
  createdAt: String!
  updatedAt: String!
  priority: String
  assignTo: ID!
  tasksUsers: User
  count: Int
}

type Query {
  tasks(workspaceId: ID!,progress: String, maxDate: String,
    priority: String assignTo: ID!): [Task!]!
  taskById(workspaceId: ID!, id: ID!): Task!
  tasksSituation(workspaceId: ID!): [Task]
}

type Mutation {
  createTask(
    title: String!
    workspaceId: ID!
    link: String
    maxDate: String
    description: String!
    priority: String
    assignTo: ID!
  ): Task!
  updateTask(
    id: ID!
    title: String!
    workspaceId: ID!
    link: String
    maxDate: String
    description: String!
    priority: String
    progress: String
    assignTo: ID!
  ): Task!
  deleteTask(id: ID!, workspaceId: ID!): Boolean
  taskSingleUpload(id: ID!, file: Upload!, workspaceId: ID!): Task,
}

type Subscription {
  addTask(workspaceId: ID!): Task!
}
